#
# My personal ZSH theme
#
# Authors:
#   Spenser Jones <hello@spenserj.com>
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

ZSH_THEME_REP_TIME_SINCE_COMMIT_SHORT="%{$fg[green]%}"
ZSH_THEME_REP_TIME_SINCE_COMMIT_MEDIUM="%{$fg[yellow]%}"
ZSH_THEME_REP_TIME_SINCE_COMMIT_LONG="%{$fg[red]%}"
ZSH_THEME_REP_TIME_SINCE_COMMIT_NEUTRAL="%{$fg[cyan]%}"

source ~/.zpreztothemes/helper.sh

function build_prompt {
  prompt_segment magenta black "%n@%m"

  prompt_segment red white "%~"
#  if [ -n "$vcs_info_msg_0_" ]; then
#    prompt_segment blue black $vcs_info_msg_0_
#  fi

  prompt_end
}

function build_prompt_git {
  echo -n "$(~/.git-radar/git-radar --zsh --fetch)"
}

function build_prompt_input {
  if [ "$vim_mode" = "INS" ]; then
    prompt_segment green black "${vim_mode}"
  else
    prompt_segment yellow black "${vim_mode}"
  fi
  prompt_end
  echo " "
}


function prompt_spenserj_precmd {
  # Check for untracked files or updated submodules since vcs_info doesn't.
  if [[ ! -z $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    fmt_branch="%b%u%c${__PROMPT_SKWP_COLORS[4]}●%f"
  else
    fmt_branch="%b%u%c"
  fi
  zstyle ':vcs_info:*:prompt:*' formats "${fmt_branch}"

  vcs_info 'prompt'
}

function prompt_spenserj_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  add-zsh-hook precmd prompt_spenserj_precmd

  # Use extended color pallete if available.
  if [[ $TERM = *256color* || $TERM = *rxvt* ]]; then
    __PROMPT_SKWP_COLORS=(
      "%F{81}"  # turquoise
      "%F{166}" # orange
      "%F{135}" # purple
      "%F{161}" # hotpink
      "%F{118}" # limegreen
    )
  else
    __PROMPT_SKWP_COLORS=(
      "%F{cyan}"
      "%F{yellow}"
      "%F{magenta}"
      "%F{red}"
      "%F{green}"
    )
  fi

  # Enable VCS systems you use.
  zstyle ':vcs_info:*' enable git

  # check-for-changes can be really slow.
  # You should disable it if you work with large repositories.
  zstyle ':vcs_info:*:prompt:*' check-for-changes true

  # Formats:
  # %b - branchname
  # %u - unstagedstr (see below)
  # %c - stagedstr (see below)
  # %a - action (e.g. rebase-i)
  # %R - repository path
  # %S - path in the repository
  # %n - user
  # %m - machine hostname

  local fmt_branch="${__PROMPT_SKWP_COLORS[2]}%b%f%u%c"
  local fmt_action="${__PROMPT_SKWP_COLORS[5]}%a%f"
  local fmt_unstaged="${__PROMPT_SKWP_COLORS[2]}●%f"
  local fmt_staged="${__PROMPT_SKWP_COLORS[5]}●%f"

  zstyle ':vcs_info:*:prompt:*' unstagedstr   "${fmt_unstaged}"
  zstyle ':vcs_info:*:prompt:*' stagedstr     "${fmt_staged}"
  zstyle ':vcs_info:*:prompt:*' actionformats "${fmt_branch}${fmt_action}"
  zstyle ':vcs_info:*:prompt:*' formats       "${fmt_branch}"
  zstyle ':vcs_info:*:prompt:*' nvcsformats   ""

  PROMPT=$prompt_newline'$(build_prompt)$(build_prompt_git)'$prompt_newline"$(build_prompt_input)"
}

vim_ins_mode="INS"
vim_cmd_mode="CMD"
vim_mode=$vim_ins_mode

function update-prompt {
  PROMPT=$prompt_newline'$(build_prompt)'$prompt_newline"$(build_prompt_input)"
  zle reset-prompt
  zle -R
}

function zle-keymap-select {
  vim_mode="${${KEYMAP/vicmd/${vim_cmd_mode}}/(main|viins)/${vim_ins_mode}}"
  update-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

# Fix a bug when you C-c in CMD mode and you'd be prompted with CMD mode indicator, while in fact you would be in INS mode
# Fixed by catching SIGINT (C-c), set vim_mode to INS and then repropagate the SIGINT, so if anything else depends on it, we will not break it
# Thanks Ron! (see comments)
function TRAPINT() {
  vim_mode=$vim_ins_mode
  update-prompt
  return $(( 128 + $1 ))
}

prompt_spenserj_setup "$@"

